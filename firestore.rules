rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /logs/{document=**} {
      allow read, write: if request.auth.uid != null;
    }
    match /projects/{projectId} {
	    allow create: if request.auth != null;     
      allow read, list: if request.auth.uid in resource.data.allowedUsers;
      allow write: if request.auth.uid in resource.data.allowedUsers;
    }
	match /projects/demo {
      allow read, list, write: if request.auth.uid != null
    }
	match /projects/demo/{path=**} {
      allow read, list, write: if request.auth.uid != null
    }
    match /projects/{projectId}/{path=**} {
	    allow create: if request.auth != null;     
      allow read, write: if request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.allowedUsers;
    }
    match /{path=**}/accessList/{docId} {
      allow read, list: if request.auth.uid == resource.data.uid;
      allow write: if request.auth.uid in get(/databases/$(database)/documents/$(path)).data.allowedUsers;
    }
    match /users/{userId} {
	    allow create: if request.auth != null; 
      allow read, list, write: if request.auth.uid == resource.data.uid;   
	    allow read, list, write: if request.auth.uid == resource.data.createdByUid;   
    }
    match /tokens/{document=**} {
      allow write: if request.auth.uid != null;
	    allow read, write: if request.auth.uid == resource.data.uid;   
    }
    match /notifications/{document=**} {
      allow write: if request.auth.uid != null;
	    allow read: if request.auth.uid == resource.data.uid;   
    }
  }
}